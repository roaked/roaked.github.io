[{"id":0,"href":"/docs/1designsimu/","title":"Design and Simulation Portfolio","section":"Docs","content":" Workflow Summary # In this following list, I showcase some of the projects I developped either through findings during my academic journey or some extracurricular projects with a few of my fellow friends. Hope you enjoy!\n"},{"id":1,"href":"/docs/3research/1ebeam/","title":"Electron Beam Welding","section":"Research","content":" Thermally Induced Reduction of Hot Cracking Susceptibility # In this following list, I showcase some of the projects I developped either through findings during my academic journey or some extracurricular projects with a few of my fellow friends. Hope you enjoy!\n#1 Master # "},{"id":2,"href":"/docs/2programming/1drone/","title":"RedBull Drone Racing","section":"Coding Portfolio","content":" Introduction # "},{"id":3,"href":"/docs/1designsimu/1mecestrutural/","title":"Structural Mechanics","section":"Design and Simulation Portfolio","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret "},{"id":4,"href":"/docs/2programming/","title":"Coding Portfolio","section":"Docs","content":" Workflow Summary # In this following list, I showcase some of the projects I developped either through findings during my academic journey or some extracurricular projects with a few of my fellow friends. Hope you enjoy!\n#1 Evolutionary Computation # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret "},{"id":5,"href":"/docs/1designsimu/2thermocup/","title":"ThermoCup","section":"Design and Simulation Portfolio","content":" ThermoCup Competition # Introduction # ThermoCup is a unique competition introduced initially at the Technical University of Lisbon during the MecanIST conferences in early 2016. Its primary objective is to challenge participants to conceive, design, and construct a steam boat. The competition covers a comprehensive spectrum of engineering aspects, incorporating various stages of the project lifecycle, from the initial conceptualization and design phase to the practical implementation, prototyping, and subsequent optimization processes.\nProblem-Solving Competences # The challenges within ThermoCup likely encompass a range of engineering disciplines, including:\nMechanical Engineering: To design the physical structure of the steam boat, accounting for structural integrity and efficiency.\nThermal Engineering: Understanding and optimizing the heat transfer mechanisms involved in generating steam to power the boat.\nFluid Dynamics: Analyzing the flow of steam and water within the boat\u0026rsquo;s components to maximize propulsion and efficiency.\nComputational Modeling: Employing Ansys Fluent workbench for virtual simulations to predict and optimize the boat\u0026rsquo;s performance before physical construction.\nInitial Considerations # In the context of designing a steam boat for ThermoCup, the significance of defining boundary conditions and material selection cannot be overstated. These initial steps essentially set the groundwork for the entire project, exerting a profound influence on the boat\u0026rsquo;s performance and its eventual success in the competition.\nBoundary Conditions: Determining the environmental constraints, operational parameters, and physical limitations within which the steam boat will be mainly vital to perform CFD simulations. This includes factors such as the type of water body the boat will navigate, assumption of variations in temperature and pressure, and even limitations on the size and weight of the boat. In this case, it was intended to be an indoors competition - involving not so high velocities. Hence, mostly laminar flow, therefore a lot of simplifications were conducted to get a rough estimation of how each parameter would impact our results. However, accurately defining these boundary conditions allows participants to tailor their designs to suit real-world scenarios, ensuring the boat\u0026rsquo;s functionality under specific circumstances.\nMaterial Selection: The choice of materials for constructing the steam boat significantly impacts its structural integrity, weight, buoyancy, and overall performance. For instance, selecting lightweight yet durable materials for the boat\u0026rsquo;s structure can enhance its maneuverability and efficiency. Similarly, heat-resistant materials might be crucial for components exposed to high temperatures in the steam propulsion system.\nBut\u0026hellip; # Keep in mind that the competition\u0026rsquo;s rules imposed caused certain constraints or guidelines regarding the materials that can be used, limitating creativity work to develop within those boundaries.\nKey-use of Computational Fluid Dynamics # The utilization of Computational Fluid Dynamics (CFD) simulations with Ansys Fluent workbench within the ThermoCup competition marked a significant and intriguing facet of the event. Ansys Fluent is a robust software suite widely employed in engineering disciplines to simulate and analyze fluid flow, heat transfer, and associated phenomena in intricate detail.\nIn the context of ThermoCup, the incorporation of Ansys Fluent implied a multifaceted challenge for everyone beyond merely constructing a physical steam boat! It introduced a dimension where participants leverage advanced virtual simulations to iteratively refine their designs and optimize the performance of their boats via:\nVirtual Prototyping Performance Optimization Predictive Analysis Surely using machine learning tools this could have been more efficient, but for that moment it yielded good results!\nOur Solution # After countless combinations of material and design, the choice of cork as the structural material for the steam boat in the ThermoCup competition seemed to have been a well-considered decision. Cork is known for its buoyant and lightweight properties (refer to previous Ch.2), and its higher density compared to materials like polystyrene likely provided the necessary weight and structural stability for the boat. This was especially important when simulating the boat\u0026rsquo;s performance under the natural conditions of flow, which can be challenging at higher speeds due to introduced turbulence flow and higher hydrodynamic forces, including drag and lift that can lead to steer off course as it interacts with the surrounding water.\nOutcomes # \\[v_{\\text{km/h}} = \\frac{8}{18.9} \\times 3.6 \\approx 1.53\\text{ km/h}\\] Securing 3rd place in the competition, covering an 8-meter water lane in just 18.9 seconds, while achieving a average speed of 1.53 km/h, is a notable result. While it is not perfect, it compromised diverse engineering problem-solving skills between meticulous material selection and thoughtful design considerations by the team.\n"},{"id":6,"href":"/docs/1designsimu/3mecdesign/","title":"Mechanical Project Design","section":"Design and Simulation Portfolio","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret "},{"id":7,"href":"/docs/2programming/3machine-learning/","title":"Predicting Fake News with ML","section":"Coding Portfolio","content":" Introduction # "},{"id":8,"href":"/docs/3research/","title":"Research","section":"Docs","content":" Workflow Summary # In this following list, I showcase some of the projects I developped either through findings during my academic journey or some extracurricular projects with a few of my fellow friends. Hope you enjoy!\n# "},{"id":9,"href":"/docs/1designsimu/4compmechs/","title":"FEM Formulation","section":"Design and Simulation Portfolio","content":" 1. Formulating Finite Element Mathematical Models # 1.1 Partial Differential Equations (PDEs) # In engineering and physics, problems are often described by partial differential equations (PDEs). The \u0026ldquo;strong form\u0026rdquo; refers to the original differential equation that must hold exactly throughout the domain, including both the governing equation and the boundary conditions.\nHowever, there are cases where directly solving the strong form might be challenging due to complexities in the equation, irregular geometries, or varying boundary conditions. This is where the \u0026ldquo;weak formulation\u0026rdquo; or (\u0026ldquo;weak form\u0026rdquo;) becomes advantageous.\nThe weak form introduces a relaxation of the constraints imposed by the strong form by multiplying the governing equation with a weight function (typically a test function) and integrating it over the domain. This relaxation allows for more flexibility in solution techniques and offers several advantages:\nHandling Boundary Conditions: The weak form often simplifies the imposition of different types of boundary conditions.\nSolvability: Some differential equations in the strong form might not have exact solutions or might be difficult to solve directly. The weak form can lead to a more manageable equation for numerical methods.\nAdaptability to Numerical Methods: Finite element, boundary element, and other numerical methods are often more easily applied to weak formulations due to the integral nature of the equations.\nHandling Discontinuities: In problems involving discontinuities or singularities, the weak form can handle these cases more effectively.\nMinimization of Requirements: In some cases, the requirement for differentiability or the number of times an equation needs to be differentiated is reduced, easing computational complexity.\nOverall, the weak form is favored in many situations because it relaxes the strictness of the original problem while maintaining the essential properties required for solutions, making it more adaptable for various solution techniques, especially in numerical analysis.\n1.2 Strong Form # Let\u0026rsquo;s begin by establishing the strong formulation of the problem, which serves as the foundation of our problem. In this formulation, we encapsulate the fundamental differential equation governing the system\u0026rsquo;s behaviour. This equation, along with the precise boundary conditions and initial values, constitutes the direct representation of the underlying physical laws guiding the system\u0026rsquo;s dynamics.\n\\[\\theta - \\nabla \\cdot (k \\nabla u) = f\\] For the torsional loading problem k = 1 and f = 2. The following equations indulge:\n\\[\\frac{\\partial^2 \\phi}{\\partial x^2} \u0026#43; \\frac{\\partial^2 \\phi}{\\partial y^2} = - 2G \\theta\\] This is referring to the Prandtl stress function, which defines shear stresses as:\n\\[\\tau_{xz} = \\frac{\\partial \\phi}{\\partial y} \\text{ and } \\tau_{yz} = \\frac{\\partial \\phi}{\\partial x}\\] The resolution of a torsion problem involves solving the Prandtl equation by imposing the boundary condition around the entire perimeter of the figure, as is known:\n\\[\\phi = 0\\] To do this, the Prandtl function is divided by \\(G\\theta\\) , considering this value is not known, as follows in the next set of expressions:\n\\[\\frac{\\partial^2 \\psi}{\\partial x^2} \u0026#43; \\frac{\\partial^2 \\psi}{\\partial y^2} = - 2 \\text{ and } \\psi = \\frac{\\phi}{G \\theta}\\] \\[\\tau_{yz} = -G \\theta \\frac{\\partial \\psi}{\\partial x} \\text{ and } \\tau_{xz} = G \\theta \\frac{\\partial \\psi}{\\partial y}\\] The developed program will calculate the solution given by \\(\\psi\\) for each node, the shear stresses, and the value of torsional rigidity. The problem of \\(G \\theta\\) is solved using the formula:\n\\[G \\theta = \\frac{Mt}{J}\\] In the previous formula, the M (torsional moment) and t (thickness) take the value of 1.\n1.3 Weak Form # The weak form enables transforming the differential equation into an integral equation, where the initial approach involves integrating the equation across the entire domain. Rules are applied to obtain the weak form, namely, defining the residual by multiplying it with an arbitrary function, integrating by parts the highest-order term, and rearranging the equation. Thus:\n\\[\\iint_S \\frac{\\partial \\phi_i}{\\partial x} \\frac{\\partial \\phi_j}{\\partial x} \u0026#43; \\frac{\\partial \\phi_i}{\\partial y} \\frac{\\partial \\phi_j}{\\partial y} dA = \\iint_S 2\\phi_i dA\\] The stiffnex matrix is given by:\n\\[K_{ij} = \\iint_S \\frac{\\partial \\phi_i}{\\partial x} \\frac{\\partial \\phi_j}{\\partial x} \u0026#43; \\frac{\\partial \\phi_i}{\\partial y} \\frac{\\partial \\phi_j}{\\partial y} dx dy\\] Additionally, the load vector is presented as:\n\\[F_i = \\iint_S 2 \\phi_i dx dy\\] In the considered problem, the only essential boundary condition will be the null solution across the entire perimeter of the figure, accompanied by a distributed load of magnitude 2 applied across the entire mesh.\n1.4 Analytical Integration # Simplifying the problem\u0026rsquo;s resolution, only regular 4-node elements with 1 degree of freedom will be considered. Information from the book \u0026ldquo;Introduction to the Finite Element Method (3rd edition)\u0026rdquo; by J.N. Reddy provides the following details:\nStiffness matrix (e): \\(K^e = \\frac{k}{6ab} \\begin{bmatrix} 2(a^2\u0026#43;b^2) \u0026amp; a^2-2b^2 \u0026amp; -(a^2\u0026#43;b^2) \u0026amp; -2a^2\u0026#43;b^2\\\\ a^2-2b^2 \u0026amp; 2(a^2\u0026#43;b^2) \u0026amp; -2a^2\u0026#43;b^2 \u0026amp; -(a^2\u0026#43;b^2)\\\\ -(a^2\u0026#43;b^2) \u0026amp; -2a^2\u0026#43;b^2 \u0026amp; 2(a^2\u0026#43;b^2) \u0026amp; a^2-2b^2\\\\ -2a^2\u0026#43;b^2 \u0026amp; -(a^2\u0026#43;b^2) \u0026amp; a^2-2b^2 \u0026amp; 2(a^2\u0026#43;b^2)\\\\ \\end{bmatrix} \\) Load vector (e): \\(f^e =\\frac{fab}{4} \\begin{bmatrix} 1\\\\ 1\\\\ 1\\\\ 1\\\\ \\end{bmatrix} \\) Where \u0026lsquo;a\u0026rsquo; corresponds to the length of the base of the element, and \u0026lsquo;b\u0026rsquo; corresponds to the height of the element.\n1.5 Numerical Integration # These functions aim to calculate the elemental stiffness matrix using the Gauss-Jordan approximation, which simplifies integration to a summation. To achieve this, a coordinate transformation from \\((x,y)\\) to \\( (\\qsi, \\eta) \\) is applied, while also computing the Jacobian of this transformation. Subsequently, the rules of Gauss points are employed.\nIn Gauss integration, the stiffness matrix K is computed through reduced integrals:\n\\[K_{ij} = \\frac{\\partial \\phi_i}{\\partial x} \\frac{\\partial \\phi_j}{\\partial x} \u0026#43; \\frac{\\partial \\phi_i}{\\partial y} \\frac{\\partial \\phi_j}{\\partial y} \\times J \\times w\\] \\[J = \\begin{bmatrix} \\frac{\\partial x}{\\partial \\qsi} \u0026amp; \\frac{\\partial x}{\\partial \\eta}\\\\ \\frac{\\partial y}{\\partial \\qsi} \u0026amp; \\frac{\\partial y}{\\partial \\eta}\\\\ \\end{bmatrix} = \\frac{ab}{4}\\] In the previous Gauss integration, \u0026lsquo;w\u0026rsquo; corresponds to the integration weights. For a 1x1 integration, the integration is performed solely at the center of the element, with a weight of w = 1. For 2x1 or 1x2 integration, each \u0026lsquo;w\u0026rsquo; value represents the sum of 2 reduced integrals (2 different points within the element), and the weight is w=2. For a 2x2 integration, the summation includes 4 reduced integrals (4 different points), and w=1. The values of \\(\\overline x and \\overline \\y\\) correspond to the Gauss points.\n"},{"id":10,"href":"/docs/2programming/10evolutionary/","title":"Evolutionary Computation","section":"Coding Portfolio","content":" Introduction # "}]