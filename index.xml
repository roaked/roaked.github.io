<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Portfolio on Ricardo Chin</title><link>https://xsleaks.dev/</link><description>Recent content in Portfolio on Ricardo Chin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</managingEditor><webMaster>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</webMaster><atom:link href="https://xsleaks.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Adversarial Multi-Agent RL</title><link>https://xsleaks.dev/docs/code/snake-game/adversarial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/snake-game/adversarial/</guid><description/></item><item><title>Drone System Dynamics</title><link>https://xsleaks.dev/docs/code/uav/dynamics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/uav/dynamics/</guid><description>Phase 1. Drone System Dynamics # tip
If you wish to skip the theoretical and implementation details, please click here to jump to the summarized findings Ch. 4 - The Moving UAV. I have cool images! ✌️ 1 System Dynamics Modeling # Breaking down the drone into subsystems helps manage its complexity. The quadrotor has three main parts:
Actuation System: This handles the rotors&amp;rsquo; model, the forces they generate ( \(F_p\) ), and the moments they create ( \(M_p\) ).</description></item><item><title>Genetic Algorithm</title><link>https://xsleaks.dev/docs/code/bin-packing/genetic-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/bin-packing/genetic-algorithm/</guid><description>Space in Bin Packing: Genetic Algorithm # Source Source 1 Theoretical Remarks # Genetic Algorithm (GA) stands as an adaptive method employed for resolving search and optimization dilemmas. Operating across numerous generations, it simulates the evolutionary process observed in natural populations, adhering to the principles of natural selection and the concept of &amp;ldquo;survival of the fittest.&amp;rdquo; By emulating this phenomenon, GAs possess the capability to &amp;ldquo;evolve&amp;rdquo; solutions for real-world problems, provided they have been encoded effectively.</description></item><item><title>Policy Based Decision-Making</title><link>https://xsleaks.dev/docs/code/snake-game/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/snake-game/policy/</guid><description/></item><item><title>Continuous Controller</title><link>https://xsleaks.dev/docs/code/uav/continuous-controller-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/uav/continuous-controller-design/</guid><description>Phase 2. Controller Design Pt. 1 # tip
If you wish to skip the theoretical and implementation details, please click here to jump to the summarized findings Ch. 9 - Piloting in a Loop. I have cool images! ✌️ 1 Continuing from Phase 1&amp;hellip; # Previously, I had addressed problem formulation and initial approaches. The primary tasks included studying the system and subsystems, creating a state-space model for the dynamical system, analyzing aspects like linearity, stability, controllability, and observability, developing Simulink models, proposing classical state feedback control, and validating the simulator for the developed models.</description></item><item><title>Particle Swarm Optimization</title><link>https://xsleaks.dev/docs/code/bin-packing/particle-swarm-optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/bin-packing/particle-swarm-optimization/</guid><description>Disco Dance of Particles # 1 Algorithm Concept # Particle Swarm Optimization (PSO) draws its inspiration from the social dynamics seen in various species, like birds and insects, as they navigate their environments to fulfill their needs. In this method, each potential solution is likened to a particle, and these particles come together to form a dynamic swarm. Each particle possesses two key characteristics: its position and its velocity. Utilizing this velocity, each particle embarks on a journey to a new position within the search space.</description></item><item><title>Discrete Controller</title><link>https://xsleaks.dev/docs/code/uav/discrete-controller-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/uav/discrete-controller-design/</guid><description>Phase 3. Amazing Race &amp;amp; Crazy 8 # tip
If you wish to skip the theoretical and implementation details, please click here to jump to the summarized findings Ch. 8 - Amazing Race. I have cool images! ✌️ 1 Continuing from Phase 2&amp;hellip; # In this phase 3, a more practical approach was adopted to tackle the problem. Discrete controllers and observers were designed for the drone, with simulations implemented to test it in a highly realistic environment.</description></item><item><title>Formula Student Lisbon</title><link>https://xsleaks.dev/docs/competitions/fst/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/competitions/fst/</guid><description>FST 010e | Suspension # warning
Disclaimer: Only slight information is divulged here as most of the calculations and simulation results are NDA/IP-related.
The content consists mainly on certain topics for car transmission design, gear fabrication and lubrication. The design and implementation follows a similar process to the one implemented at Car Transmission Design, but for epicyclical gear trains.
1 Background # During Formula Student (FS) competitions, students are tasked with creating, testing, and refining a race car adhering to specific guidelines outlined by Formula Student Germany (FSG) and Formula Society of Automotive Engineers (FSAE).</description></item><item><title>Hamiltonian Paths: Linked Lists</title><link>https://xsleaks.dev/docs/lectures/hamiltonian-graphs/hamiltonian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/lectures/hamiltonian-graphs/hamiltonian/</guid><description>Pathfinder: Simulating Hamiltonian Paths in Fortran # 1 Simulation and Analysis of Graph Path Selection # Graph theory serves as a fundamental framework for modeling and understanding various systems across scientific domains. This study presents a detailed computational simulation implemented in Fortran, focusing on the manipulation, selection, and analysis of paths and individual entities within a graph. The simulation involves stepwise operations, including path creation, criteria-based selection, and the identification of Hamiltonian paths.</description></item><item><title>Gate Sense: Computer Vision</title><link>https://xsleaks.dev/docs/code/uav/computer-vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/uav/computer-vision/</guid><description>Phase 4. UAV Computer Vision # tip
If you wish to skip the theoretical and implementation details, please click here to jump to the summarized findings Ch. 3 - Pixel Pilots Certification Acquired. I have cool images! ✌️ 1 Computer Vision for Obstacle Detection # In preparation for the Red Bull drone race, a comprehensive dataset was compiled, consisting of images capturing gates from diverse angles, distances, and lighting conditions.</description></item><item><title>ThermoCup</title><link>https://xsleaks.dev/docs/competitions/thermocup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/competitions/thermocup/</guid><description>ThermoCup # warning
Disclaimer: Only slight information is divulged here as most of the calculations and simulation results are NDA/IP-related. 1 What is the ThermoCup? # ThermoCup is a unique competition introduced initially at the Technical University of Lisbon during the MecanIST conferences in early 2016. Its primary objective is to challenge participants to conceive, design, and construct a steam boat. The competition covers a comprehensive spectrum of engineering aspects, incorporating various stages of the project lifecycle, from the initial conceptualization and design phase to the practical implementation, prototyping, and subsequent optimization processes.</description></item></channel></rss>