<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maltesers &amp; Coffee on Ricardo Chin</title><link>https://xsleaks.dev/</link><description>Recent content in Maltesers &amp; Coffee on Ricardo Chin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</managingEditor><webMaster>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</webMaster><atom:link href="https://xsleaks.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Drone Dynamics</title><link>https://xsleaks.dev/docs/2code/1drone/_index2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/1drone/_index2/</guid><description>Drone System Dynamics # 1 System Dynamics Modeling # Breaking down the drone into subsystems helps manage its complexity. The quadrotor has three main parts:
Actuation System: This handles the rotors&amp;rsquo; model, the forces they generate ( \(F_p\) ), and the moments they create ( \(M_p\) ). Each rotor gets an input voltage ( \(V_{m_i}\) ) and produces an angular velocity ( \(\Omega_i\) ).
Movement System: This part deals with forces (not just from rotors but also external factors like wind) and moments that drive the drone&amp;rsquo;s movement.</description></item><item><title>Genetic Algorithm</title><link>https://xsleaks.dev/docs/2code/5od/_index2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/5od/_index2/</guid><description> Introduction #</description></item><item><title>Drone Controller Design Pt. 1</title><link>https://xsleaks.dev/docs/2code/1drone/_index3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/1drone/_index3/</guid><description> Controller Design Pt. 1 # 1 #</description></item><item><title>Particle Swarm Optimization</title><link>https://xsleaks.dev/docs/2code/5od/_index3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/5od/_index3/</guid><description> Introduction #</description></item><item><title>Drone Controller Design Pt. 2</title><link>https://xsleaks.dev/docs/2code/1drone/_index4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/1drone/_index4/</guid><description> Controller Design Pt.2 # 1 #</description></item><item><title>Drone Computer Vision</title><link>https://xsleaks.dev/docs/2code/1drone/_index5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/2code/1drone/_index5/</guid><description>Pixel Pilots: Drone Computer Vision # 1 Computer Vision for Obstacle Detection # In preparation for the Red Bull drone race, a comprehensive dataset was compiled, consisting of images capturing gates from diverse angles, distances, and lighting conditions. These images showcase the gates amidst various backgrounds, providing a range of scenarios that drones might encounter during the race. The intention behind gathering such a varied dataset is to enable the development of an algorithm capable of accurately identifying these gates despite changes in perspective, distance, lighting, and background colors, facilitating precise navigation for the drones during the high-paced race.</description></item></channel></rss>