<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UAV: Red Bull Air Racing on Ricardo Chin</title><link>https://xsleaks.dev/docs/code/uav/</link><description>Recent content in UAV: Red Bull Air Racing on Ricardo Chin</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xsleaks.dev/docs/code/uav/index.xml" rel="self" type="application/rss+xml"/><item><title>Drone System Dynamics</title><link>https://xsleaks.dev/docs/code/uav/dynamics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/code/uav/dynamics/</guid><description>&lt;h1 id="phase-1-drone-system-dynamics">
 &lt;strong>Phase 1. Drone System Dynamics&lt;/strong>
 &lt;a class="anchor" href="#phase-1-drone-system-dynamics">#&lt;/a>
&lt;/h1>

 &lt;blockquote class="book-hint2 tip">
 &lt;p class="hint-title tip">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#tip-notice">&lt;/use>
 &lt;/svg>&lt;span>tip&lt;/span>&lt;/p>
 If you wish to skip the theoretical and implementation details, &lt;a href="https://ricardochin.com/docs/2code/1drone/_index2/#4-the-moving-uav">please click here to jump to the summarized findings Ch. 4 - The Moving UAV&lt;/a>.
 &lt;/blockquote>

&lt;h2 id="1-system-dynamics-modeling">
 1 System Dynamics Modeling
 &lt;a class="anchor" href="#1-system-dynamics-modeling">#&lt;/a>
&lt;/h2>
&lt;p>Breaking down the drone into subsystems helps manage its complexity. The quadrotor has three main parts:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Actuation System: This handles the rotors&amp;rsquo; model, the forces they generate (
&lt;link rel="stylesheet" href="https://xsleaks.dev/katex/katex.min.css" />
&lt;script defer src="https://xsleaks.dev/katex/katex.min.js">&lt;/script>
&lt;script defer src="https://xsleaks.dev/katex/auto-render.min.js" onload="renderMathInElement(document.body);">&lt;/script>&lt;span>
 \(F_p\)
&lt;/span>
), and the moments they create (&lt;span>
 \(M_p\)
&lt;/span>
). Each rotor gets an input voltage (&lt;span>
 \(V_{m_i}\)
&lt;/span>
) and produces an angular velocity (&lt;span>
 \(\Omega_i\)
&lt;/span>
).&lt;/p></description></item><item><title>Continuous Controller</title><link>https://xsleaks.dev/docs/code/uav/continuous-controller-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/code/uav/continuous-controller-design/</guid><description>&lt;h1 id="phase-2-controller-design-pt-1">
 &lt;strong>Phase 2. Controller Design Pt. 1&lt;/strong>
 &lt;a class="anchor" href="#phase-2-controller-design-pt-1">#&lt;/a>
&lt;/h1>

 &lt;blockquote class="book-hint2 tip">
 &lt;p class="hint-title tip">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#tip-notice">&lt;/use>
 &lt;/svg>&lt;span>tip&lt;/span>&lt;/p>
 If you wish to skip the theoretical and implementation details, &lt;a href="https://ricardochin.com/docs/code/uav/continuous-controller-design/#9-piloting-in-a-loop">please click here to jump to the summarized findings Ch. 9 - Piloting in a Loop&lt;/a>.
 &lt;/blockquote>

&lt;h2 id="1-continuing-from-phase-1">
 1 Continuing from Phase 1&amp;hellip;
 &lt;a class="anchor" href="#1-continuing-from-phase-1">#&lt;/a>
&lt;/h2>
&lt;p>Previously, I had addressed problem formulation and initial approaches. The primary tasks included studying the system and subsystems, creating a state-space model for the dynamical system, analyzing aspects like linearity, stability, controllability, and observability, developing Simulink models, proposing classical state feedback control, and validating the simulator for the developed models.&lt;/p></description></item><item><title>Discrete Controller</title><link>https://xsleaks.dev/docs/code/uav/discrete-controller-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/code/uav/discrete-controller-design/</guid><description>&lt;h1 id="phase-3-amazing-race--crazy-8">
 &lt;strong>Phase 3. Amazing Race &amp;amp; Crazy 8&lt;/strong>
 &lt;a class="anchor" href="#phase-3-amazing-race--crazy-8">#&lt;/a>
&lt;/h1>

 &lt;blockquote class="book-hint2 tip">
 &lt;p class="hint-title tip">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#tip-notice">&lt;/use>
 &lt;/svg>&lt;span>tip&lt;/span>&lt;/p>
 If you wish to skip the theoretical and implementation details, &lt;a href="https://ricardochin.com/docs/code/uav/discrete-controller-design/#8-amazing-race">please click here to jump to the summarized findings Ch. 8 - Amazing Race&lt;/a>.
 &lt;/blockquote>

&lt;h2 id="1-continuing-from-phase-2">
 1 Continuing from Phase 2&amp;hellip;
 &lt;a class="anchor" href="#1-continuing-from-phase-2">#&lt;/a>
&lt;/h2>
&lt;p>In this phase 3, a more practical approach was adopted to tackle the problem. Discrete controllers and observers were designed for the drone, with simulations implemented to test it in a highly realistic environment. This involved using provided tracks and fine-tuning controllers to minimize following errors while maintaining optimal speed without causing critical destabilization.&lt;/p></description></item><item><title>Gate Sense: Computer Vision</title><link>https://xsleaks.dev/docs/code/uav/computer-vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/code/uav/computer-vision/</guid><description>&lt;h1 id="phase-4-uav-computer-vision">
 &lt;strong>Phase 4. UAV Computer Vision&lt;/strong>
 &lt;a class="anchor" href="#phase-4-uav-computer-vision">#&lt;/a>
&lt;/h1>

 &lt;blockquote class="book-hint2 tip">
 &lt;p class="hint-title tip">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#tip-notice">&lt;/use>
 &lt;/svg>&lt;span>tip&lt;/span>&lt;/p>
 If you wish to skip the theoretical and implementation details, &lt;a href="https://ricardochin.com/docs/code/uav/computer-vision/#3-pixel-pilots-certification-acquired">please click here to jump to the summarized findings Ch. 3 - Pixel Pilots Certification Acquired&lt;/a>.
 &lt;/blockquote>

&lt;h2 id="1-computer-vision-for-obstacle-detection">
 1 Computer Vision for Obstacle Detection
 &lt;a class="anchor" href="#1-computer-vision-for-obstacle-detection">#&lt;/a>
&lt;/h2>
&lt;p>In preparation for the Red Bull drone race, a comprehensive dataset was compiled, consisting of images capturing gates from diverse angles, distances, and lighting conditions. These images showcase the gates amidst various backgrounds, providing a range of scenarios that drones might encounter during the race. The intention behind gathering such a varied dataset is to enable the development of an algorithm capable of accurately identifying these gates despite changes in perspective, distance, lighting, and background colors, facilitating precise navigation for the drones during the high-paced race.&lt;/p></description></item></channel></rss>