<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Snake: Reinforcement Learning on Ricardo Chin</title><link>https://xsleaks.dev/docs/code/snake-game/</link><description>Recent content in Snake: Reinforcement Learning on Ricardo Chin</description><generator>Hugo</generator><language>en-us</language><managingEditor>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</managingEditor><webMaster>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</webMaster><atom:link href="https://xsleaks.dev/docs/code/snake-game/index.xml" rel="self" type="application/rss+xml"/><item><title>Off Policy RL &amp; Neuroevolution</title><link>https://xsleaks.dev/docs/code/snake-game/deepqnetwork/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/snake-game/deepqnetwork/</guid><description>&lt;h1 id="off-policy-and-dqn-parameter-optimization">
 &lt;strong>Off Policy and DQN Parameter Optimization&lt;/strong>
 &lt;a class="anchor" href="#off-policy-and-dqn-parameter-optimization">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1200/1*zRZ46MeFZMd5F52CHM6EYA.png" alt="sidas" />&lt;/p>
&lt;h2 id="1-reinforcement-deep-q-network-architecture">
 1 Reinforcement Deep Q-Network Architecture
 &lt;a class="anchor" href="#1-reinforcement-deep-q-network-architecture">#&lt;/a>
&lt;/h2>
&lt;p>DQN (Deep Q-Network) stands as a RL algorithm rooted in deep learning principles. It integrates a Q-Learning algorithm with a deep neural network to address RL challenges in expansive state and action spaces. In the DQN algorithm, a neural network is employed to approximate the Q function, where states and actions serve as inputs, yielding corresponding Q values as outputs. Essentially, the DQN algorithm can be broken down into the following steps:&lt;/p></description></item><item><title>Policy Based Decision-Making</title><link>https://xsleaks.dev/docs/code/snake-game/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/snake-game/policy/</guid><description>&lt;h1 id="model-free-policy-based-reinforcement-learning">
 &lt;strong>Model-Free Policy Based Reinforcement Learning&lt;/strong>
 &lt;a class="anchor" href="#model-free-policy-based-reinforcement-learning">#&lt;/a>
&lt;/h1></description></item><item><title>Adversarial Multi-Agent RL</title><link>https://xsleaks.dev/docs/code/snake-game/adversarial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>ricardo.chin@tecnico.ulisboa.pt (Ricardo Chin)</author><guid>https://xsleaks.dev/docs/code/snake-game/adversarial/</guid><description>&lt;h1 id="adversarial-multi-agent-reinforcement-learning">
 &lt;strong>Adversarial Multi-Agent Reinforcement Learning&lt;/strong>
 &lt;a class="anchor" href="#adversarial-multi-agent-reinforcement-learning">#&lt;/a>
&lt;/h1></description></item></channel></rss>